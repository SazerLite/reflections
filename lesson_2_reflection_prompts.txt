What happens when you initialize a repository? Why do you need to do it?

The directory is altered into a git repository by adding the '.git' file. This way meta data can be saved as changes are made to the files within the repository.
____________________

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It is the transitional setup area from the directory to the repository. It makes it easy to control what is changed and what is left alone.
____________________

How can you use the staging area to make sure you have one commit per logical
change?

Keep the stage on standby and add/update files until it makes logical sense to make the commit.
____________________

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When you want to experiment with new features or create different versions of the same software.
____________________

How do the diagrams help you visualize the branch structure?

It's easy to track which commits parent others. Having a visual map of paths makes it easy to follow.
____________________

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

All the changes made in the of the branches are combined into one branch and commit. This way we can see how the merged commit parents multiple branches.
____________________

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Automatic pro: Quicker and easier to do.
Automatic con: Conflicts may arise that can cause frustration or confusion.
Manually pro: Much more reliable.
Manually con: Much more time consuming.
____________________
